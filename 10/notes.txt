FILE INPUT - OUTPUT

there are two kinds of memory in the computer
a. volatile -> this is the temporary memory (RAM)
b. non-volatile -> this is the permanent memory (SSD)

file : container in a storage device to store data 

RAM is volatile 
contents are lost when program terminates 
files are used to persist the data

operations on a file 

Create a file 
Open a file 
Close a file 
Read from a file 
Write in a file

there are two basic types of files 

a. text files  -> .txt , .c 
b. binary files -> .exe , .mp3 , .jpg

FILE POINTER (01.c)

FILE is a (hidden) structure that needs to be created for opening a file 
A FILE that points to this structure & is used to access the file 

FILE *fptr

OPENING A FILE 

fptr = open("filename" , mode)


OPENING A FILE 

fclose(fptr)

file opening modes 

"r" open to read 
"rb" open to read in binary 

if the file does not exist then in the pointer null is stored 

"w" open to write 
"wb open to write in binary

if the file does not exist then these functions will crete the functions

"a" open to append

the new data will store after the old data


READING FROM A FILE (02.c)

fscanf(fptr, "%c" , &ch)

WRITING TO A FILE (03.c)

fprintf(fptr, "%c" , ch)

READ AND WRITE THE CHARACTER 

fgetc(fptr) (04.c)

fputc('A' , fptr) (05.c)

EOF -> end of file (06.c)

fgetc returns EOF to show that the file has ended